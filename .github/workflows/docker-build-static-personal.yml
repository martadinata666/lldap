name: Docker Static Personal


on:
  workflow_call:
  push:
    branches:
      - "personal"

env:
  CARGO_TERM_COLOR: always


jobs:
  build-ui:
    runs-on: ubuntu-latest
    container:
      image: martadinata666/rust:latest
      options: --user root
    steps:
      - name: Pull from git
        run: |
              sudo apt update
              sudo apt -y install gzip
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            cargo/registry/index
            cargo/registry/cache
            cargo/git/db
            target
          key: lldap-ui-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            lldap-ui-
      - name: install wasm-pack via cargo
        run: |
             cargo install wasm-pack
             rustup target add wasm32-unknown-unknown

#             wasm-pack build --target web --release --mode no-install -- --offline
      - name: build frontend
        env:
          RUST_LOG: "debug"
        run: |
             cd app
             ./build.sh
      - name: check path
        run: ls -al app/
      - name: upload ui artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ui
          path: app/

  build-bin:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [armv7-unknown-linux-musleabihf,aarch64-unknown-linux-musl,x86_64-unknown-linux-musl]
    container:
      image: martadinata666/rust:latest
      options: --user root
      env:
        CARGO_TERM_COLOR: always
        RUSTFLAGS: -Ctarget-feature=+crt-static
        CARGO_HOME: ${GITHUB_WORKSPACE}/.cargo
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: |
            .cargo/registry/index
            .cargo/registry/cache
            .cargo/git/db
            target/
          key: lldap-bin-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            lldap-bin-${{ matrix.target }}-
      - name: show my env
        run: env

      - name: Add target
        run: rustup target add ${{ matrix.target }}

      - name: compile ${{ matrix.target }}
        run: cargo build --target=${{ matrix.target }} --release -p lldap -p lldap_migration_tool -p lldap_set_password

      - name: check path
        run: ls -alr target/release

      - name: upload ${{ matrix.target}} lldap artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target}}-lldap-bin
          path: target/${{ matrix.target }}/release/lldap

      - name: upload ${{ matrix.target }} migration tool artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-migration-tool-bin
          path: target/${{ matrix.target }}/release/migration-tool

      - name: upload ${{ matrix.target }}-set-password-bin
        uses: actions/upload-artifact@v3
        with:
          name: ${{ matrix.target }}-lldap-set-password-bin
          path: target/${{ matrix.target }}/release/lldap_set_password

