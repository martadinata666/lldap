name: Create Artifacts
on:
  release:
    types:
      - "published"

jobs:
  build-binary:
    uses: ./.github/workflows/docker-build-static-personal.yml


  create-release-artifacts:
     needs: [build-binary]
     name: Create release artifacts
     if: github.event_name == 'release'
     runs-on: ubuntu-latest
     steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v3
        with:
          path: bin/
      - name: Check file
        run: ls -alR bin/
      - name: Fixing Filename
        run: |
             mv bin/aarch64-unknown-linux-musl-lldap-bin/lldap bin/aarch64-lldap
             mv bin/x86_64-unknown-linux-musl-lldap-bin/lldap bin/amd64-lldap
             mv bin/armv7-unknown-linux-gnueabihf-lldap-bin/lldap bin/armhf-lldap
             mv bin/aarch64-unknown-linux-musl-migration-tool-bin/migration-tool bin/aarch64-migration-tool
             mv bin/x86_64-unknown-linux-musl-migration-tool-bin/migration-tool bin/amd64-migration-tool
             mv bin/armv7-unknown-linux-gnueabihf-migration-tool-bin/migration-tool bin/armhf-migration-tool
             mv bin/aarch64-unknown-linux-musl-lldap-bin/lldap_set_password bin/aarch64-lldap_set_password
             mv bin/x86_64-unknown-linux-musl-lldap-bin/lldap_set_password bin/amd64-lldap_set_password
             mv bin/armv7-unknown-linux-gnueabihf-lldap-bin/lldap_set_password bin/armhf-lldap_set_password
             chmod +x bin/*-lldap
             chmod +x bin/*-migration-tool
             chmod +x bin/*-lldap_set_password

      - name: Download llap ui artifacts
        uses: actions/download-artifact@v3
        with:
          name: ui
          path: web
      - name: UI (web) artifacts cleanup
        run: mkdir app && mv web/index.html app/index.html && mv web/static app/static && mv web/pkg app/pkg
      - name: Fetch web components
        run: |
             sudo apt update
             sudo apt install wget
             for file in $(cat app/static/libraries.txt); do wget -P app/static "$file"; done
             for file in $(cat app/static/fonts/fonts.txt); do wget -P app/static/fonts "$file"; done
             chmod a+r -R .

      - name: Setup LLDAP dir for packing
        run: |
             mkdir aarch64-lldap
             mkdir amd64-lldap
             mkdir armhf-lldap
             mv bin/aarch64-lldap aarch64-lldap/lldap
             mv bin/amd64-lldap amd64-lldap/lldap
             mv bin/armhf-lldap armhf-lldap/lldap
             mv bin/aarch64-migration-tool aarch64-lldap/migration-tool
             mv bin/amd64-migration-tool amd64-lldap/migration-tool
             mv bin/armhf-migration-tool armhf-lldap/migration-tool
             mv bin/aarch64-lldap_set_password aarch64-lldap/lldap_set_password
             mv bin/amd64-lldap_set_password amd64-lldap/lldap_set_password
             mv bin/armhf-lldap_set_password armhf-lldap/lldap_set_password
             cp -r app aarch64-lldap/
             cp -r app amd64-lldap/
             cp -r app armhf-lldap/
             ls -alR aarch64-lldap/
             ls -alR amd64-lldap/
             ls -alR armhf-lldap/

      - name: Packing LLDAP and Web UI
        run: |
             tar -czvf aarch64-lldap.tar.gz aarch64-lldap/
             tar -czvf amd64-lldap.tar.gz amd64-lldap/
             tar -czvf armhf-lldap.tar.gz armhf-lldap/


      - name: Upload compressed release
        uses: ncipollo/release-action@v1
        id: create_release
        with:
          allowUpdates: true
          artifacts:  aarch64-lldap.tar.gz,
                      amd64-lldap.tar.gz,
                      armhf-lldap.tar.gz
        env:
         GITHUB_TOKEN: ${{ github.token }}
